#!/bin/sh

### BEGIN INIT INFO
# Provides:          newrelic_plugin_com.newrelic.plugins.memcached
# Required-Start:    $syslog $remote_fs
# Required-Stop:     $syslog $remote_fs
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: New Relic 'com.newrelic.plugins.memcached' Plugin
# Description:       Controls the New Relic 'com.newrelic.plugins.memcached' Plugin
### END INIT INFO

DESC="New Relic com.newrelic.plugins.memcached Plugin Daemon"
NAME=newrelic_plugin_com.newrelic.plugins.memcached
VERSION=2.0.1
DAEMONDIR="/var/optoro/newrelic-npi/plugins/com.newrelic.plugins.memcached/newrelic_memcached_plugin-2.0.1"
PIDFILE=/var/run/$NAME.pid

get_pid() {
  cat "$PIDFILE"
}

is_running() {
  [ -f "$PIDFILE" ] && ps `get_pid` > /dev/null 2>&1
}

start() {
  if is_running; then
    echo "Already Started $NAME"
  else
    echo "Starting $NAME"
    cd "$DAEMONDIR"
    # Test permissions before starting the service, so you do not have
    # a rogue process on systems that do not prompt for passwd (AWS)
    touch $PIDFILE || return 1
    sudo -u root java -Xmx128m "-Dnewrelic.platform.config.dir=/var/optoro/newrelic-npi/plugins/com.newrelic.plugins.memcached/newrelic_memcached_plugin-2.0.1/config" -jar "/var/optoro/newrelic-npi/plugins/com.newrelic.plugins.memcached/newrelic_memcached_plugin-2.0.1/plugin.jar" >> $DAEMONDIR/daemon.log 2>&1 &
    echo "$!" > $PIDFILE
  fi
}

status() {
  if is_running; then
    echo "$NAME $VERSION is running"
  else
    echo "$NAME $VERSION is stopped"
    exit 1
  fi
}

stop() {
  if is_running; then
    echo "Stopping $NAME"
    kill `get_pid`
  else
    echo "$NAME was not running"
  fi
}

restart() {
  stop
  sleep 1
  start
}

case "${1}" in
  start)
    start
    ;;
  stop)
    stop
    ;;
  status)
    status
    ;;
  restart)
    restart
    ;;
  *)
    echo "Usage: ${0} {start|stop|restart|status}"
    exit 1
    ;;
esac
